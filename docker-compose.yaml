version: "3.8"

x-logging: &logging
    logging:
      driver: "loki"
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "100"
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s

# Общие настройки ресурсов для всех сервисов
x-resources: &default-resources
  deploy:
    resources:
      limits:
        cpus: '0.50'
        memory: 512M
      reservations:
        cpus: '0.25'
        memory: 256M

services:
  backend:
    <<: [*logging, *default-resources]
    build: 
      context: backend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      - LOG_LEVEL=DEBUG
      - ADMIN_EMAIL=admin@gmail.com
      - ADMIN_PASSWORD=asdf
      - DATABASE_CONNECTION_STRING=postgresql://postgres:password@postgres:5432
      - JWT_VARY_SECRET_HASH_IN_PUBLIC_REPO=1965d3ece323947d9a778a9341cc68828e708842dc8f809750fcf9985f27d67e
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_HOURS=24
      - CORS_ALLOWED_ORIGINS=https://hack.lcma.tech
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOW_HEADERS=DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
      - FTP_HOST=ftp-server
      - FTP_PORT=21
      - FTP_USER=admin
      - FTP_PASSWORD=asd
      - FTP_DIR=.
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      ftp-server:
        condition: service_started
        
  ftp-server:
    <<: [*logging, *default-resources]
    build: ./ftp-server
    volumes:
      - ./ftp-server/files:/app/files
    environment:
      - FTP_USER=admin
      - FTP_PASSWORD=asd
      - FTP_PORT=21
      - FTP_DIR=./files
      - PASV_MIN_PORT=60000
      - PASV_MAX_PORT=60100
    container_name: ftp-server


  postgres:
    <<: [*logging, *default-resources]
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    image: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d database"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s


  pgadmin:
    <<: [*logging, *default-resources]
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: root@mail.xyz
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 5050:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  nginx:
    <<: [*logging, *default-resources]
    image: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl/cloudflare.crt:/etc/nginx/ssl/cert/cloudflare.crt:ro
      # - ./ssl/cloudflare.key:/etc/nginx/ssl/private/cloudflare.key:ro
    ports:
      - 80:80
      - 443:443
      
  prometheus:
    <<: [*logging, *default-resources]
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_storage:/prometheus
    depends_on:
      - cadvisor


  cadvisor:
    <<: [*logging, *default-resources]
    image: gcr.io/cadvisor/cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    
  grafana:
    <<: [*logging, *default-resources]
    image: grafana/grafana-oss
    restart: unless-stopped
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./configs/grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
      - loki
    
  loki:
    <<: [*logging, *default-resources]
    image: grafana/loki
    restart: unless-stopped
    environment:
      - TZ="Europe/Moscow"
    volumes:
      - ./configs/loki/retention-config.yaml:/etc/loki/retention-config.yaml
    command: -config.file=/etc/loki/retention-config.yaml -config.expand-env=true
    ports:
      - 3100:3100
    

volumes:
  prometheus_storage:
  grafana_storage:
  postgres-data:
  pgadmin-data:
    